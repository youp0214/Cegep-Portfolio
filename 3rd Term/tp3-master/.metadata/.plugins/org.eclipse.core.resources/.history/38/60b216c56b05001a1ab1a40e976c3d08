package mouvement;

import java.awt.Point;

import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.util.Duration;
import modele.Particule;

public class Deplacement implements Runnable {

	private Particule particule;
	private static final int NBR_RAFRAICHISSEMENTS = 8;

	public Deplacement(Particule pParticule) {
		setParticule(pParticule);
		System.out.println("watatow");
	}

	public Particule getParticule() {
		return particule;
	}

	public void setParticule(Particule pParticule) {
		particule = pParticule;
	}

	private boolean verifierMur() {
		return true;
	}

	private boolean verifierAutrePart() {
		return true;
	}

	private void deplacer() {
		Point pointTemp = new Point();
		pointTemp.setLocation(getParticule().getPosX().getValue() + getParticule().getVitesse()[0],
				getParticule().getPosY().getValue() + getParticule().getVitesse()[1]);
		getParticule().setPosition(pointTemp);
//		System.out.println(getParticule().getPosition());
//		if (verifierMur()) {
//			if (verifierAutrePart()) {
//
//			} else {
//			}
//		} else {
//
//		}
	}

	private void collision() {

	}

	@Override
	public void run() {
		final Timeline loop = new Timeline(
				new KeyFrame(Duration.millis(NBR_RAFRAICHISSEMENTS), new EventHandler<ActionEvent>() {

					@Override
					public void handle(ActionEvent event) {
						deplacer();
						System.out.println("x: " + getParticule().getPosX().getValue() + ", y:"
								+ getParticule().getPosY().getValue());

					}

				}));
//		loop.setCycleCount(15);
		loop.setCycleCount(Timeline.INDEFINITE);
		loop.play();
//		while (true) {
//			deplacer();
//			try {
//				wait(NBR_RAFRAICHISSEMENTS);
//			} catch (InterruptedException e) {
//
//			}
//		}

	}
}
